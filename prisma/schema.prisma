// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  walletAddress String         @unique
  userType      UserType       @default(EMPLOYEE)
  hasOnboarded  Boolean        @default(false)
  organizations Organization[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@map("users")
}

model Organization {
  id              String     @id @default(cuid())
  name            String
  contractAddress String     @unique // Address of the deployed Organization contract
  owner           User       @relation(fields: [ownerId], references: [id])
  ownerId         String
  paymentToken    String // Address of the payment token (USDC)
  isActive        Boolean    @default(true)
  employees       Employee[]
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  @@map("organizations")
}

model Employee {
  id              String       @id @default(cuid())
  organization    Organization @relation(fields: [organizationId], references: [id])
  organizationId  String
  employeeAddress String
  name            String? // Optional employee name/identifier
  salaryPerSecond BigInt // Salary amount per second in wei
  startDate       DateTime
  isActive        Boolean      @default(true)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  @@unique([organizationId, employeeAddress])
  @@map("employees")
}

enum UserType {
  EMPLOYER
  EMPLOYEE
}
